{"version":3,"sources":["firebase.js","components/Header/Header.js","components/Menu/Menu.js","components/Content/Content.js","components/Stats/Stast.js","components/ProjectCard/ProjectCard.js","components/Projects/Projects.js","components/buttons/index.js","components/ProjectForm/ProjectForm.js","components/AddProject/AddProject.js","components/EditProject/EditProject.js","components/ProjectDone/ProjectDone.js","components/DoneProject/DoneProject.js","components/StatsCheckHalf/StatsCheckHalf.js","components/DoneHalf/DoneHalf.js","components/StatsCheckOverHalf/OverHalf.js","components/DoneOverHalf/DoneOverHalf.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","auth","Header","props","className","onClick","onLogout","Menu","color","to","Content","children","Stats","groupedData","data","reduce","currentProject","index","findIndex","project","tyyppi","summa","push","console","log","barData","labels","map","datasets","type","label","responsive","maintainAspectRatio","backgroundColor","x","filter","valmiusaste","kesken","length","barData2","loppupvm","kuvaus","slice","options","scales","yAxes","ticks","beginAtZero","options2","xAxes","time","displayFormats","day","ProjectCard","alkupvm","moment","key","id","format","budjetti","Checkbox","inputProps","Projects","rows","card","Button","classnames","primary","secondary","join","ProjectForm","valmis","state","handleInputChange","bind","handleSubmit","handleCancel","handleDeleteProject","event","target","value","checked","name","this","setState","preventDefault","Object","assign","parseFloat","uuidv4","onFormSubmit","history","goBack","onDeleteProject","onSubmit","htmlFor","onChange","size","placeholder","React","Component","withRouter","AddProject","EditProject","match","params","projectData","ProjectDone","DoneProjects","dones","amount3","StatsCheckHalf","DoneHalf","half","amount","luku","OverHalf","DoneOverHalf","overhalf","amount2","App","user","dbRef","firestore","handleFormSubmit","login","logout","handleList4","handleList2","handleList3","onAuthStateChanged","refData","collection","doc","uid","unsubscribe","orderBy","onSnapshot","docs","forEach","docdata","newdata","set","sort","a","b","delete","then","catch","error","signInWithPopup","result","errorMessage","message","signOut","path","render","exact","toString","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e247f057.chunk.js","sourcesContent":["import *as firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport \"firebase/auth\";\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDYg8rRcyKKCuquF7OUC7GII7j6J90aF0s\",\r\n    authDomain: \"projektori-9688c.firebaseapp.com\",\r\n    databaseURL: \"https://projektori-9688c.firebaseio.com\",\r\n    projectId: \"projektori-9688c\",\r\n    storageBucket: \"projektori-9688c.appspot.com\",\r\n    messagingSenderId: \"366865871111\",\r\n    appId: \"1:366865871111:web:94b659a4c991e3077455a2\",\r\n    measurementId: \"G-7WDH3S5CVN\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const auth = firebase.auth();\r\n\r\n  export default firebase;\r\n ","import React from 'react';\r\n\r\nimport './Header.css';\r\n\r\n\r\nfunction Header(props) {\r\n    return(\r\n     \r\n      <div className =\"header\">\r\n        <div>\r\n        <h1>Projektori</h1>\r\n        <div className=\"ulos\">\r\n        <button onClick={props.onLogout}><label>Kirjaudu ulos</label> </button>  \r\n        </div>\r\n        </div> \r\n        </div>\r\n   \r\n     \r\n    );\r\n  }\r\n  \r\n  export default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ViewList from \"@material-ui/icons/ViewList\";\r\nimport TrendingUp from \"@material-ui/icons/TrendingUp\";\r\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\r\nimport FibreNew from '@material-ui/icons/FiberNew';\r\n\r\n/*napit linkeiksi menuun*/\r\n\r\nimport './Menu.css';\r\n\r\nfunction Menu(props) {\r\n    return(\r\n      <div className=\"menu\" color=\"action\">\r\n        <Link to =\"/\"><div className=\"menu__nappi\"><ViewList color=\"action\"/></div></Link>\r\n        <Link to =\"/stats\"><div className=\"menu__nappi\"><TrendingUp color=\"action\"/></div></Link>\r\n        <Link to =\"/done\"><div className=\"menu__nappi\"><CheckCircle color=\"action\"/></div></Link>\r\n        <Link to = \"/add\"><div className=\"menu__nappi\"><FibreNew color=\"action\"/></div></Link>\r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n  export default Menu;","import React from 'react';\r\nimport './Content.css';\r\n\r\n\r\nfunction Content(props) {\r\n    return (\r\n      <div className=\"content\">\r\n        { props.children }\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nimport Content from '../Content/Content';\r\n\r\n\r\nimport './Stats.css';\r\n\r\n\r\n function Stats(props) {\r\n\r\n  /*koostetaan budjetin määrä projektityypeittän*/\r\n\r\n  const reducer = (groupedData,currentProject) => {\r\n    const index = groupedData.findIndex (project => project.tyyppi === currentProject.tyyppi);\r\n    if (index >= 0){\r\n      groupedData[index].summa = groupedData[index].summa + currentProject.summa;\r\n    }else{\r\n      groupedData.push({tyyppi: currentProject.tyyppi, summa:currentProject.summa});\r\n    }\r\n    return groupedData;\r\n    \r\n  }\r\n\r\n\r\n  let groupedData= props.data.reduce(reducer,[]);\r\n  \r\n  console.log(groupedData);\r\n\r\n\r\n  let barData ={\r\n    labels: groupedData.map(project => project.tyyppi),\r\n    \r\n    datasets: \r\n   \r\n        [\r\n          {\r\n            type:'bar',\r\n         data:groupedData.map(project => project.summa),\r\n         label:\" \",\r\n         responsive:true,\r\n         maintainAspectRatio:false,\r\n         backgroundColor:[\r\n          '#9AF376',\r\n          '#76D8F3',\r\n          '#DDCF78',\r\n        ]}]\r\n      }\r\n\r\n        let options={\r\n          responsive: true,\r\n          scales: {\r\n            yAxes: [{\r\n              ticks: {\r\n                beginAtZero: true\r\n              }\r\n            }]\r\n          }\r\n        }\r\n\r\n\r\n\r\n        /* filteröidään pois valmiit*/\r\n      const x = props.data.filter(project => project.valmiusaste <= \"90\");\r\n\r\n    \r\n      /*valmiusasteen erottaminen per objekti, peruutettu alkuperäiseen koodiin. Ei hyötyä kappalemäärän kanssa, kun tarvitaan tietoa yksittäisestä projektista. \r\n      katsotaan käyttöä uudelleen, kun määritelty väline porjektin laajuudeen tarkasteluun. Dataa pitänee myös jakaa pienempiin osiin.\r\n\r\n     const groupBy=(objectArray, valmiusaste) => {\r\n          return objectArray.reduce (function(total,project){\r\n            let key =project[valmiusaste];\r\n           \r\n            if(!total[key]) {\r\n              total[key]=[];\r\n            }\r\n            total[key].push(project);\r\n            return total;\r\n          },{});\r\n          \r\n        }\r\n        let asteet= groupBy(x,'valmiusaste'[\"\"]);\r\n        \r\n        console.log(asteet); testataan, että tuo oikean kentän*/\r\n        \r\n        \r\n       \r\n        /*tulostetaan keskeneräisten määrä, lisätään arvot x- ja y-akseleille ja katkaistaan kuvauskentän teksti*/\r\n\r\n       let kesken= x.length;\r\n\r\n \r\n\r\n        let barData2 = {\r\n          \r\n          labels: x.map(project=> project.loppupvm + (\", \") + project.kuvaus.slice(0,10)), /*Päivämääräkenttä ei kääntynyt millään suomalaiseen muotoon, johtunee kahdesta arvosta?*/\r\n          datasets: [{\r\n              label:\"Yhteensä keskeneräisiä \" +kesken,\r\n              type:'bar',\r\n              data:x.map(project=> project.valmiusaste),\r\n              responsive:true,\r\n              maintainAspectRatio:false,\r\n              backgroundColor:[\r\n                '#9AF376',\r\n                '#76D8F3',\r\n                '#DDCF78',\r\n                '#7FFFD4',\r\n                '#5F9EA0',\r\n                '#00BFFF',\r\n                '#00008B',\r\n                '#ADD8E6'\r\n\r\n              ]\r\n          }]\r\n        }\r\n        \r\n        let options2={\r\n            responsive: true,\r\n            maintainAspectRatio:false,\r\n            scales: {\r\n            yAxes: [{\r\n              ticks: {\r\n                beginAtZero: true\r\n              }\r\n            }],\r\n            xAxes:[{          /*yritetty vielä hakea x-akselin päivämäärää osiota erikseen, kokeiltu eri muotoja, kokeiltu erottaa optionsit omaksi*/\r\n                 type: \"time\",\r\n                  time:{\r\n                  displayFormats:{\r\n                  day:'D.M.Y'        \r\n                } \r\n            }\r\n            }]\r\n          }\r\n        } \r\n            \r\n      \r\n          \r\n       \r\n          \r\n        \r\n        \r\n         /* let options3 = {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales:{*/\r\n         \r\n       \r\n            return (\r\n              <Content>\r\n                    \r\n              <h2> Budjetointikooste </h2>\r\n                <div className= 'stats__graph'>\r\n                <Bar data={barData} options={options}/>\r\n                </div>\r\n\r\n                <h2> Päätymispäivä, valmiina %</h2>\r\n                <div className= 'stats__graph'>\r\n                <Bar data={barData2} options2={options2} />\r\n                </div>     \r\n              </Content>\r\n            );\r\n    }\r\n\r\n\r\n  export default Stats; ","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './ProjectCard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport {Checkbox} from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\nfunction ProjectCard(props) {\r\n\r\n      \r\n\r\n      let alkupvm = moment(props.data.alkupvm);\r\n      let loppupvm = moment(props.data.loppupvm);\r\n\r\n      return(\r\n      <div className=\"projectcard\" key={props.data.id}>\r\n          <div className=\"projectcard__row\">\r\n          <div className=\"projectcard__tyyppi\">{props.data.tyyppi}</div>\r\n          </div>\r\n          <div className=\"projectcard__row\">  \r\n          <h4>Aloitettu</h4>\r\n          <div className=\"projectcard__alkupvm\">{alkupvm.format(\"D.M.Y\")}</div>\r\n          </div>\r\n          <div className=\"projectcard__row\"> \r\n          <h4>Päättyy</h4>\r\n          <div className=\"projectcard__loppupvm\">{loppupvm.format(\"D.M.Y\")}</div>\r\n          </div>\r\n          <div className=\"projectcard__row\"> \r\n          <h4>Budjetti </h4>\r\n          <div className=\"projectcard__budjetti\">{props.data.budjetti}</div>\r\n          </div>\r\n          <div className=\"projectcard__row\"> \r\n          <h4>Kuvaus </h4>\r\n          <div className=\"projectcard__row\">{props.data.kuvaus}</div>   \r\n          </div>\r\n          <div className=\"projectcard__row\"> \r\n          <h4>Valmis % </h4>\r\n          <div className=\"projectcard__row\">{props.data.valmiusaste}</div>   \r\n          </div>\r\n          <div className=\"projectcard__row\">\r\n          <div>\r\n          <p><Link to={\"/edit/\" + props.data.id}><label>Muokkaa</label> </Link> </p>  \r\n          </div>\r\n          <div className=\"projectcard__row\"> \r\n          <label> <Checkbox inputProps={{ 'aria-label': 'primary checkbox with small size' }}/>Keskeytetty </label></div>\r\n          </div>\r\n          </div>\r\n          \r\n    );\r\n  }\r\n\r\n\r\n\r\n  export default ProjectCard;","import React from 'react';\r\n\r\nimport Content from '../Content/Content';\r\nimport ProjectCard from '../ProjectCard/ProjectCard';\r\n\r\n/*mäpätään projektikortin tiedot pääväkymälle*/\r\nfunction Projects(props) {\r\n  let rows = props.data.map(card => {\r\n      return (\r\n        <ProjectCard data={card} key={card.id}/>\r\n      );\r\n    }\r\n  );\r\n\r\n\r\n    return(\r\n      <Content>\r\n         {rows}\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  export default Projects;","import React from 'react';\r\n\r\n\r\nimport './buttons.css';\r\n\r\nconst classNames = classnames => classnames.join(\" \");\r\n\r\nconst Button = ({ className = \"\", primary, secondary, ...props}) => {\r\n  return (\r\n    <button \r\n      type=\"button\" \r\n      className={classNames([\r\n          \"button\",\r\n          className,\r\n          primary ? \"button--primary\" : \"\",\r\n          secondary ? \"button--secondary\" : \"\"\r\n      ])}\r\n      {...props} />    \r\n  );\r\n}\r\n\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport Button from '../buttons';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nimport './ProjectForm.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ProjectForm extends React.Component {\r\n\r\n    \r\n            constructor(props){\r\n                super(props);\r\n                const data =props.data ? props.data : \r\n                {    \r\n                id:\"\",\r\n                tyyppi:\"Järjestelmän jatkokehitys\",\r\n                alkupvm: \"\",\r\n                loppupvm: \"\",\r\n                kuvaus:\"\",\r\n                budjetti:\"Kyllä\",\r\n                summa:\"0\",\r\n                valmiusaste:\"\",\r\n                valmis:\"\"\r\n                }\r\n                this.state={\r\n                    data:data,\r\n                };\r\n\r\n                this.handleInputChange=this.handleInputChange.bind(this);\r\n                this.handleSubmit=this.handleSubmit.bind(this);\r\n                this.handleCancel=this.handleCancel.bind(this);\r\n                this.handleDeleteProject=this.handleDeleteProject.bind(this);\r\n               \r\n            }\r\n\r\n            /*muutettujen tietojen käsittely*/\r\n\r\n           handleInputChange (event) {\r\n               const target = event.target;\r\n                console.log(event.target.type) // Use this to compare the type.\r\n                if ( event.target.type ==='number' ) {// Your case }\r\n             }\r\n               const value = target.type === 'checkbox' ? target.checked : target.value;\r\n               const name = target.name;\r\n\r\n                    this.setState ({\r\n                        data: {\r\n                        ...this.state.data,\r\n                            [name]:value\r\n                        }  \r\n                     });\r\n              \r\n            }\r\n\r\n            /*lomaketietojen lähetys*/\r\n\r\n            handleSubmit(event){\r\n                event.preventDefault();\r\n                let data= Object.assign({}, this.state.data);\r\n                data.summa=parseFloat(data.summa);\r\n                data.id= data.id ? data.id : uuidv4();\r\n                this.props.onFormSubmit(data);\r\n                this.props.history.push(\"/\");\r\n            \r\n            }  \r\n        \r\n               \r\n                /*peruuta nappi palauttaa etusivulle*/\r\n            handleCancel(event){\r\n                event.preventDefault();\r\n                this.props.history.goBack(); \r\n            }\r\n\r\n            handleDeleteProject(event){\r\n                event.preventDefault();\r\n                this.props.onDeleteProject(this.state.data.id);\r\n                this.props.history.push(\"/\");\r\n            }\r\n\r\n\r\n          /*tulostus*/\r\n\r\n\r\n            render(){\r\n                return(\r\n                   \r\n        \r\n                <form onSubmit={this.handleSubmit} key={this.state.data.id}>\r\n                    \r\n                        <div className=\"projectform\" >\r\n                        <div> \r\n                        </div>\r\n                        <div className=\"projectform__row\">\r\n                        <div>\r\n                        <label htmlFor=\"name\" >Valitse tyyppi </label>\r\n                        \r\n                        <select type=\"text\" name = \"tyyppi\"  value={this.state.data.tyyppi} onChange={this.handleInputChange}>\r\n                                <option value= \"Järjestelmän jatkokehitys\">Järjestelmän jatkokehitys</option>\r\n                                <option value= \"Prosessin kehitys\">Prosessin kehitys</option>\r\n                                <option value= \"Uusi järjestelmä\">Uusi järjestelmä</option>                                           \r\n                        </select>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"projectform__row\">\r\n                        <div>\r\n                        <label htmlFor=\"alkupvm\">Aloituspäivä 2 </label><div className=\"info__user\">Jos projekti on jo aloitettu, valitse alkuperäinen aloituspäivämäärä.</div><input  type=\"date\" name=\"alkupvm\" value={this.state.data.alkupvm} onChange={this.handleInputChange} size=\"10\"/>\r\n                        </div>\r\n                        <div>\r\n                        <label htmlFor=\"loppupvm\">Päättymispäivä </label><div className=\"info__user\">Valitse arvioitu päättymispäivä, jos sitä ei ole määritelty.</div>   <input type=\"date\" name=\"loppupvm\" value={this.state.data.loppupvm} onChange={this.handleInputChange} size=\"10\"/> \r\n                        </div>\r\n                        </div>\r\n                        <div className=\"projectform__row\">\r\n                        <div>\r\n                        <label htmlFor=\"kuvaus\">Projektin lisätiedot </label><input placeholder=\"Kirjoita järjestelmän nimi alkuun, jos projekti liittyy sellaiseen.\" type=\"text\" name=\"kuvaus\" size=\"40\" value={this.state.data.kuvaus} onChange={this.handleInputChange} />   \r\n                        </div>\r\n                        </div>\r\n                        <div className=\"projectform__row\">\r\n                        <div>\r\n                        <label htmlFor=\"budjetti\" >Budjetoitu </label><div className=\"info__user\">Valitse \"Kyllä\" vain siinä tapauksessa, että budjetti on jo hyväksytty.</div>\r\n                        <div>\r\n                        <select name = \"budjetti\" value={this.state.data.budjetti} onChange={this.handleInputChange}>\r\n                                <option value= \"Kyllä\">Kyllä</option>\r\n                                <option value= \"Ei\">Ei</option>\r\n                        </select>\r\n                        <div>\r\n                        <label htmlFor=\"summa\">Summa</label><input type=\"number\" name=\"summa\" size=\"8\" value={this.state.data.summa} onChange={this.handleInputChange} />\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"projectform__row\">\r\n                        <div>\r\n                        <label htmlFor=\"name\" >Valmiusaste (prosenttia) </label>\r\n                      \r\n                        <select type= \"text\" name = \"valmiusaste\"  value={this.state.data.valmiusaste} onChange={this.handleInputChange} >\r\n             \r\n                                <option value=\"\"></option>\r\n                                <option value= \"10\" >10</option>\r\n                                <option value= \"20\">20</option>\r\n                                <option value= \"30\">30</option>\r\n                                <option value= \"40\">40</option>\r\n                                <option value= \"50\">50</option>\r\n                                <option value= \"60\">60</option>\r\n                                <option value= \"70\">70</option>\r\n                                <option value= \"80\">80</option>\r\n                                <option value= \"90\">90</option>\r\n                                <option value= \"Valmis\">Valmis</option>\r\n                        </select>\r\n                        </div>\r\n                        <div>\r\n                        <label htmlFor=\"valmis\">Valmis pvm </label><input  type=\"date\" name=\"valmis\" value={this.state.data.valmis} onChange={this.handleInputChange} />\r\n                        </div>\r\n                        </div>\r\n                        \r\n                        <div>\r\n                        <Button type= \"submit\" primary >{this.state.data.id ? \"Tallenna\" : \"Lisää\"} </Button>              \r\n                        <Button onClick={this.handleCancel} secondary>Peruuta</Button>\r\n                         {this.props.onDeleteProject ? <Button onClick = {this.handleDeleteProject}>Poista</Button> :\"\"}\r\n                        </div>\r\n                        </div>                            \r\n                        </form>\r\n            );\r\n            }        \r\n\r\n }\r\n\r\n export default withRouter (ProjectForm);","import React from 'react';\r\n\r\n\r\nimport Content from '../Content/Content';\r\nimport ProjectForm from '../ProjectForm/ProjectForm';\r\n\r\n\r\n\r\nimport './AddProject.css';\r\n\r\n function AddProject(props) {\r\n    return (\r\n      <Content>\r\n\r\n        <h2> Syötä projektin tai kehitystehtävän tiedot </h2>\r\n       \r\n        <ProjectForm onFormSubmit = {props.onFormSubmit} />\r\n       \r\n\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  export default AddProject;","import React from 'react';\r\n\r\nimport Content from '../Content/Content';\r\nimport ProjectForm from '../ProjectForm/ProjectForm';\r\nimport './EditProject.css';\r\n\r\n  \r\n\r\n function EditProject(props) {\r\n\r\n  const index = props.data.findIndex (project => project.id === props.match.params.id);\r\n\r\n  let projectData = props.data[index];\r\n\r\n\r\n    return (\r\n      <Content>\r\n        <div className=\"editproject\">\r\n\r\n        <h2> Muokkaa projektin tietoja </h2>\r\n\r\n       <p>Match:{index}</p>\r\n        <ProjectForm onFormSubmit = {props.onFormSubmit} data={projectData} onDeleteProject={props.onDeleteProject}/>\r\n\r\n       \r\n       \r\n        </div>\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  export default EditProject;","import React from 'react';\r\nimport moment from'moment';\r\n\r\nfunction ProjectDone (props) {\r\n\r\n    \r\n\r\n            let loppupvm = moment(props.data.loppupvm);\r\n            let alkupvm =moment (props.data.alkupvm);\r\n            let valmis = moment (props.data.valmis);\r\n          return(\r\n          <div>\r\n          <div className=\"projectcard\" key ={props.data.id}></div>\r\n          <div className=\"projectcard__tyyppi\">{props.data.tyyppi}</div>\r\n          <div className=\"projectcard__row\">  \r\n          <div>Aloitettu</div>\r\n          <div className=\"projectcard__alkupvm\">{alkupvm.format(\"D.M.Y\")}</div>\r\n          </div>\r\n          <div className=\"projectcard__row\"> \r\n          <div>Päättyy</div>\r\n          <div className=\"projectcard__loppupvm\">{loppupvm.format(\"D.M.Y\")}</div>\r\n          </div>\r\n          <div className=\"projectcard__row\"> \r\n          <div>Kuvaus </div>\r\n          <div className=\"projectcard__row\">{props.data.kuvaus}</div>   \r\n          </div>\r\n          <div className=\"projectcard__row\">{props.data.valmiusaste}</div>\r\n          <div className=\"projectcard__row\">{valmis.format(\"D.M.Y\")}</div>   \r\n          </div>\r\n      );\r\n      }          \r\n      \r\n      \r\n  export default ProjectDone;\r\n","import React from 'react';\r\n\r\nimport Content from '../Content/Content';\r\nimport ProjectDone from '../ProjectDone/ProjectDone';\r\n\r\nimport './DoneProject.css';\r\n/*erotellaan done- näytölle projektit, jotka valmiita*/\r\nfunction DoneProjects(props) {\r\n\r\n  \r\n    \r\n    let dones = props.data.filter (project => \r\n         project.valmiusaste === \"Valmis\");\r\n         let amount3=(dones.length); \r\n      \r\n \r\n      let rows=dones.map (card=>\r\n        <ProjectDone data={card} key={card.id}/>\r\n      );\r\n    \r\n\r\n    return(\r\n      <Content>\r\n        <div className=\"otsikko3\">\r\n        <div className=\"otsikko3__teksti\">\r\n        <div><h4> Valmiit</h4> <h5>Määrä: {amount3}</h5></div></div>\r\n        </div>\r\n        \r\n         {rows}\r\n        \r\n      </Content>\r\n    );\r\n  }\r\n\r\n  export default DoneProjects;\r\n ","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './StatsCheck.css'\r\n\r\nfunction StatsCheckHalf (props) {    \r\n\r\n    let loppupvm = moment(props.data.loppupvm);\r\n    return(\r\n     \r\n    <div>\r\n    <div className=\"projectcard\" key={props.data.id}></div>\r\n    <div className=\"projectcard__tyyppi\">{props.data.tyyppi}</div>\r\n    <div className=\"projectcard__row\"> \r\n    <div className=\"projectcard__valmiusaste\">{props.data.valmiusaste} % </div>\r\n    </div>\r\n    <div className=\"projectcard__row\"> \r\n    <div>Päättyy </div>\r\n    <div className=\"projectcard__loppupvm\">{loppupvm.format(\"D.M.Y\")}</div>\r\n    </div>\r\n    <div className=\"projectcard__row\"> \r\n    <div className=\"projectcard__kuvaus\">{props.data.kuvaus}</div>\r\n    </div>\r\n    </div>\r\n    \r\n    );\r\n    }\r\n\r\n    export default StatsCheckHalf;","import React from 'react';\r\n\r\nimport './DoneHalf.css';\r\n\r\nimport Content from '../Content/Content';\r\nimport StatsCheckHalf from '../StatsCheckHalf/StatsCheckHalf';\r\n\r\n/*erotellaan done- näytölle projektit, joista tehty 50 tai sen alle, tulostetaan määrä*/\r\nfunction DoneHalf(props) {\r\n\r\nlet half = props.data.filter(project => project.valmiusaste <= \"50\")\r\nlet amount=(half.length);\r\n  let rows = half.map (card=>\r\n\r\n    <StatsCheckHalf data={card} key={card.id} luku={amount}/>\r\n  );\r\n    return (\r\n      <Content>\r\n         <div className=\"otsikko\">  \r\n       <h4>Valmiina alle puolet</h4><h5>Määrä: {amount}</h5>\r\n       </div> \r\n        {rows}   \r\n        \r\n      </Content>\r\n    );\r\n  }\r\n\r\n  export default DoneHalf;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './StatsCheckOverHalf.css';\r\n\r\nfunction OverHalf (props) {    \r\n\r\n    let loppupvm = moment(props.data.loppupvm);\r\n\r\n    return(\r\n     \r\n    <div>\r\n    <div className=\"projectcard\" key={props.data.id}></div>\r\n    <div className=\"projectcard__tyyppi\">{props.data.tyyppi}</div>\r\n    <div className=\"projectcard__row\"> \r\n    <div className=\"projectcard__valmiusaste\">{props.data.valmiusaste} % </div>\r\n    </div>\r\n    <div className=\"projectcard__row\"> \r\n    <div>Päättyy </div>\r\n    <div className=\"projectcard__loppupvm\">{loppupvm.format(\"D.M.Y\")}</div>\r\n    </div>\r\n    <div className=\"projectcard__row\"> \r\n    <div className=\"projectcard__kuvaus\">{props.data.kuvaus}</div>\r\n    </div>\r\n    </div>\r\n    \r\n    );\r\n    }\r\n\r\n    export default OverHalf;","import React from 'react';\r\n\r\nimport Content from '../Content/Content';\r\nimport OverHalf from '../StatsCheckOverHalf/OverHalf';\r\n\r\nimport './DoneOverHalf.css';\r\n\r\n/*erotellaan done- näytölle projektit, joista tehty yli puolet, tulostetaan määrä*/\r\nfunction DoneOverHalf(props) {\r\n\r\nlet overhalf = props.data.filter (project => project.valmiusaste > \"50\" && project.valmiusaste <= \"90\")\r\nlet amount2=(overhalf.length);\r\n\r\n  let rows = overhalf.map (card=>\r\n\r\n    <OverHalf data={card} key={card.id}/>\r\n  );\r\n    return (\r\n      <Content>\r\n            <div className=\"otsikko2\"> \r\n       <h4>Valmiina yli puolet</h4> <h5>Määrä: {amount2}</h5>\r\n            </div>\r\n        {rows}   \r\n        \r\n      </Content>\r\n    );\r\n  }\r\n\r\n  export default DoneOverHalf;","import React, { Component} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\nimport firebase, { provider,auth } from './firebase';\n\n\nimport Header from './components/Header/Header';\nimport Menu from './components/Menu/Menu';\nimport Stats from './components/Stats/Stast.js';\nimport Projects from './components/Projects/Projects';\nimport AddProject from './components/AddProject/AddProject';\nimport EditProject from './components/EditProject/EditProject';\nimport DoneProjects from './components/DoneProject/DoneProject';\nimport DoneHalf from './components/DoneHalf/DoneHalf';\nimport DoneOverHalf from './components/DoneOverHalf/DoneOverHalf';\nimport Content from './components/Content/Content';\nimport Button from './components/buttons';\n\n\nclass App extends Component {\n\n      constructor(props) {\n        super(props);\n        this.state ={\n          data:[],\n          user:null\n        }\n        this.dbRef=firebase.firestore();\n       this.handleFormSubmit= this.handleFormSubmit.bind(this);\n       this.handleDeleteProject=this.handleDeleteProject.bind(this);\n       this.login=this.login.bind(this);\n       this.logout=this.logout.bind(this);\n       this.handleList4=this.handleList4.bind(this);\n       this.handleList2=this.handleList2.bind(this);\n       this.handleList3=this.handleList3.bind(this);\n      }\n\n      /*lisätään db:n tiedon käsittelijä ja sanpshot tietojen näyttämiseksi. Järjetetään tiedot \"lähtöruudulle\"*/\n\n      componentDidMount(){\n        auth.onAuthStateChanged((user) => {\n\n          if(user){\n            this.setState({\n              user:user\n            });\n\n            this.refData=this.dbRef.collection(\"users\").doc(user.uid).collection('data');  \n        \n        this.unsubscribe= this.refData.orderBy(\"loppupvm\").onSnapshot((docs)=>{\n          let data=[];\n          docs.forEach((doc)=> {\n            let docdata =doc.data();\n            data.push(docdata);\n          });\n          this.setState({\n            data:data\n          });\n        });\n      }\n      });\n      }\n\n          /*datan siirto tallennuksella/lisäyksellä*/\n          handleFormSubmit(newdata) {\n        \n            this.refData.doc(newdata.id).set(newdata);\n          }\n\n         \n          handleList4() {\n            let data= this.state.data.slice();\n            data.sort (function (a, b) {\n              if(a.budjetti<b.budjetti)\n              {return -1;}\n              if (a.budjetti>b.budjetti) \n              {return 1;}   \n              else {\n               return 0; \n              }\n            });\n             this.setState({\n              data: data\n              \n            });\n            }\n\n          /*projektin poistaminen*/\n            \n           handleDeleteProject(id){\n           this.refData.doc(id).delete().then().catch(error => {console.error('Virhe poistettaessa projektia',+ error)});\n          }\n\n\n          \n            \n            handleList2() {\n              let data= this.state.data.slice();\n              data.sort (function (a, b) {\n                if(a.kuvaus<b.kuvaus)\n                {return -1;}\n                if (a.kuvaus>b.kuvaus) \n                {return 1;}   \n                else {\n                 return 0; \n                }\n              });\n               this.setState({\n                data: data\n                \n              });\n              }\n\n            \n              handleList3() {\n                let data= this.state.data.slice();\n                data.sort (function (a, b) {\n                  if(a.valmiusaste<b.valmiusaste)\n                  {return -1;}\n                  if (a.valmiusaste>b.valmiusaste) \n                  {return 1;}   \n                  else {\n                   return 0; \n                  }\n                });\n                this.setState({\n                  data: data\n                  \n                });\n                }\n  /*testattu, että käyttäjä näkyy consolessa oikein, ei tuoda näkyviin,\n  sillä ei mielekästä paikkaa näyttää ja ajatuksena yhteinen organisaatiotunnus*/\n             login() {\n               auth.signInWithPopup(provider).then((result)=> {\n                const user=result.user;\n                this.setState({\n                  user: user,\n                  error:null\n                });\n               }).catch((error) => {\n                 const errorMessage =error.message;\n                 this.setState({\n                   error:errorMessage\n                 });\n               });\n             }   \n\n             logout(){\n              this.unsubscribe();\n               auth.signOut().then(()=> {\n                 this.setState({\n                   user:null\n                 });\n                 this.refData=null;\n               });\n             }\n              \n                \n            render () {\n\n              if (!this.state.user) {\n                return(\n                  <Router>\n                    <div className=\"App\">\n                    \n                      <Content>          \n                        <div className=\"app_welcome\">\n                          <div className=\"app_name\">\n                        <h1>PROJEKTORI</h1> \n                        </div>\n                      <p>Et ole kirjautunut sisälle</p> \n                      <p><Button primary onClick={this.login}>Kirjaudu tästä</Button></p>\n                      {this.state.error?<p>{this.state.error}</p>:null}\n                      </div>\n                      </Content>\n                    </div>\n                  </Router>\n                )\n              }\n              return(  \n                  <Router>\n                  <div className=\"App\">\n                  <Route path= \"/\" render = {()=><Header  onLogout={this.logout} />} />\n                  <div className=\"Nappi\">\n               \n                  <Route path= \"/\" exact render= {() => <button onClick={this.handleList3} secondary={toString()}> Järjestä: valmiina 0% -100% </button>}/>\n                  <Route path = \"/\" exact render = { () => <button onClick={this.handleList2} secondary={toString()}>Järjestä: Kuvauksen mukaan </button>}/>\n                  <Route path = \"/\" exact render = { () => <button onClick={this.handleList4} secondary={toString()}>Järjestä: Projektit, joilla ei budjettia </button>}/>\n            \n                  </div>\n                  <Route path= \"/stats\" render = {()=><Stats data={this.state.data} />} />\n                  <Route path= \"/\" exact render = {()=><Projects data={this.state.data} />} />\n                  <Route path =\"/done\" render= { () => <DoneHalf data={this.state.data} />} /> \n                  <Route path =\"/done\" render= { () => <DoneOverHalf data={this.state.data} />} /> \n                  <Route path= \"/done\" render = { (props) => <DoneProjects data={this.state.data}{...props} />} />\n                  <Route path= \"/add\" render = { () => <AddProject onFormSubmit={this.handleFormSubmit} />} /> \n                  <Route path= \"/edit/:id\" render = {(props) => <EditProject data={this.state.data}  onFormSubmit={this.handleFormSubmit} onDeleteProject={this.handleDeleteProject}{...props} /> }/>\n                  <Menu/>\n                  </div>\n                  </Router>\n                   \n                );\n            }         \n      \n          }\n        \n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}